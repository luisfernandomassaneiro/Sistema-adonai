/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.luismassaneiro.sistemadonai.view.cadastro;

import com.luismassaneiro.sistemadonai.controller.DAOFactory;
import com.luismassaneiro.sistemadonai.controller.ProdutoDAO;
import static com.luismassaneiro.sistemadonai.enums.MensagemFixas.CAMPO_EXISTENTE;
import static com.luismassaneiro.sistemadonai.enums.MensagemFixas.CAMPO_OBRIGATORIO;
import com.luismassaneiro.sistemadonai.exceptions.ValidateException;
import com.luismassaneiro.sistemadonai.helper.ProdutoHelper;
import com.luismassaneiro.sistemadonai.model.Produto;
import com.luismassaneiro.sistemadonai.utils.FormatUtils;
import com.luismassaneiro.sistemadonai.utils.TrataExcecao;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author luis.massaneiro
 */
public class ProdutoForm extends javax.swing.JInternalFrame {

    private Produto model;
    private final ProdutoDAO dao = DAOFactory.criaProdutoDAO();
    
    public ProdutoForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        botao_Gravar = new javax.swing.JButton();
        botao_Cancelar = new javax.swing.JButton();
        checkBox_Ativo = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        texto_Descricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        texto_valor = new javax.swing.JFormattedTextField();
        lbMessages = new javax.swing.JLabel();
        texto_Codigo = new javax.swing.JTextField();
        botao_Novo = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de produto");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Código");

        botao_Gravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/save.png"))); // NOI18N
        botao_Gravar.setText("Gravar");
        botao_Gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_GravarActionPerformed(evt);
            }
        });

        botao_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/cancel-24.png"))); // NOI18N
        botao_Cancelar.setText("Cancelar");
        botao_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_CancelarActionPerformed(evt);
            }
        });

        checkBox_Ativo.setSelected(true);
        checkBox_Ativo.setText("Ativo");
        checkBox_Ativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBox_AtivoActionPerformed(evt);
            }
        });

        jLabel2.setText("Descrição");

        jLabel3.setText("Valor");

        texto_valor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        texto_valor.setToolTipText("");

        lbMessages.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbMessages.setForeground(new java.awt.Color(255, 0, 0));
        lbMessages.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbMessages.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbMessages.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        botao_Novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/new.png"))); // NOI18N
        botao_Novo.setText("Novo");
        botao_Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_NovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbMessages, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botao_Gravar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_Cancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_Novo)
                                .addGap(0, 188, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(texto_valor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(texto_Codigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(texto_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(checkBox_Ativo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbMessages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(texto_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkBox_Ativo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(texto_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(texto_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_Gravar)
                    .addComponent(botao_Cancelar)
                    .addComponent(botao_Novo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botao_GravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_GravarActionPerformed
        try {
            model.setCodigo(texto_Codigo.getText());
            model.setAtivo(checkBox_Ativo.isSelected());
            model.setDescricao(texto_Descricao.getText());
            model.setValor(FormatUtils.parseBigDecimal(texto_valor.getText()));
            ProdutoHelper.getInstance().validaCamposObrigatorios(model);
            lbMessages.setText("");
            pack();
            ProdutoHelper.getInstance().validaDuplicidade(model);
            model = dao.atualizar(model);
            JOptionPane.showMessageDialog(this, "Registrado gravado com sucesso!");
            setModel(model);
        } catch (ValidateException ex) {
            Logger.getLogger(ProdutoForm.class.getName()).log(Level.SEVERE, null, ex);
            if(ex.getMensagemFixa() != null) {
                switch(ex.getMensagemFixa()) {
                    case CAMPO_OBRIGATORIO:
                    if (ex.getFields() != null) {
                        StringBuilder builder = new StringBuilder("<html>");
                        builder.append("O(s) seguinte(s) campo(s) é(são) obrigatório(s): ");
                        for (String key : ex.getFields().keySet()) {
                            builder.append("<br>");
                            builder.append(ex.getFields().get(key));
                        }
                        builder.append("</html>");
                        lbMessages.setText(builder.toString());
                        pack();
                        break;
                    }
                    case CAMPO_EXISTENTE:
                    JOptionPane.showMessageDialog(null, ex.getMensagemExcecao(), "Erro!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                String mensagem = TrataExcecao.trataMensagemErro(ex, ProdutoForm.class);
                JOptionPane.showMessageDialog(null, mensagem, "Erro!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(ProdutoForm.class.getName()).log(Level.SEVERE, null, ex);
            String mensagem = TrataExcecao.trataMensagemErro(ex, ProdutoForm.class);
            JOptionPane.showMessageDialog(null, mensagem, "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botao_GravarActionPerformed

    private void botao_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_CancelarActionPerformed
        hide();
    }//GEN-LAST:event_botao_CancelarActionPerformed

    private void checkBox_AtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBox_AtivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBox_AtivoActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
    }//GEN-LAST:event_formInternalFrameActivated

    private void botao_NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_NovoActionPerformed
        limpar();
    }//GEN-LAST:event_botao_NovoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_Cancelar;
    private javax.swing.JButton botao_Gravar;
    private javax.swing.JButton botao_Novo;
    private javax.swing.JCheckBox checkBox_Ativo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbMessages;
    private javax.swing.JTextField texto_Codigo;
    private javax.swing.JTextField texto_Descricao;
    private javax.swing.JFormattedTextField texto_valor;
    // End of variables declaration//GEN-END:variables

    private void limpar() {
        model = new Produto();
        texto_Codigo.setText("");
        texto_Descricao.setText("");
        texto_valor.setText("");
        checkBox_Ativo.setSelected(true);
        lbMessages.setText("");
        pack();
    }
    
    public void setModel(Produto model) {
        this.model = model;
        if(model != null) {
            texto_Codigo.setText(model.getCodigo());
            texto_Descricao.setText(model.getDescricao());
            texto_valor.setText(FormatUtils.formatBigDecimal(model.getValor()));
            checkBox_Ativo.setSelected(model.isAtivo());
        } else {
            this.model = new Produto();
            limpar();
        }
    }
    
}
