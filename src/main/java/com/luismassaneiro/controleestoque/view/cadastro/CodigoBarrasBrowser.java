/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.luismassaneiro.controleestoque.view.cadastro;

import com.luismassaneiro.controleestoque.controller.CodigoBarraDAO;
import com.luismassaneiro.controleestoque.controller.DAOFactory;
import com.luismassaneiro.controleestoque.exceptions.ValidateException;
import com.luismassaneiro.controleestoque.helper.ProdutoHelper;
import com.luismassaneiro.controleestoque.model.CodigoBarra;
import com.luismassaneiro.controleestoque.model.Produto;
import com.luismassaneiro.controleestoque.utils.TrataExcecao;
import com.luismassaneiro.controleestoque.view.tablemodel.CodigoBarraTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author Luis.Massaneiro
 */
public class CodigoBarrasBrowser extends javax.swing.JInternalFrame {

    private Produto produto;
    private final CodigoBarraDAO codigoBarraDAO = DAOFactory.criaCodigoBarraDAO();
    private CodigoBarra codigoBarraSelecionado = new CodigoBarra();
    /**
     * Creates new form CadastroCodigoBarras
     */
    public CodigoBarrasBrowser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_CodigoBarra = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        texto_CodigoBarra = new javax.swing.JTextField();
        botao_Gravar = new javax.swing.JButton();
        botao_Cancelar = new javax.swing.JButton();
        checkBox_Ativo = new javax.swing.JCheckBox();
        botao_ExcluirItem = new javax.swing.JButton();
        botao_Limpar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        texto_ID = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Código de barras");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tabela_CodigoBarra.setModel(new CodigoBarraTableModel());
        jScrollPane1.setViewportView(tabela_CodigoBarra);

        jLabel1.setText("Código de barra");

        botao_Gravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/save.png"))); // NOI18N
        botao_Gravar.setText("Gravar");
        botao_Gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_GravarActionPerformed(evt);
            }
        });

        botao_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/cancel-24.png"))); // NOI18N
        botao_Cancelar.setText("Cancelar");
        botao_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_CancelarActionPerformed(evt);
            }
        });

        checkBox_Ativo.setSelected(true);
        checkBox_Ativo.setText("Ativo");

        botao_ExcluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/delete-32.png"))); // NOI18N
        botao_ExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_ExcluirItemActionPerformed(evt);
            }
        });

        botao_Limpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/luismassaneiro/controleestoque/imagens/eraser-32.png"))); // NOI18N
        botao_Limpar.setText("Limpar");
        botao_Limpar.setMaximumSize(new java.awt.Dimension(103, 33));
        botao_Limpar.setMinimumSize(new java.awt.Dimension(103, 33));
        botao_Limpar.setPreferredSize(new java.awt.Dimension(103, 33));
        botao_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_LimparActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        texto_ID.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(texto_CodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkBox_Ativo))
                    .addComponent(jLabel1))
                .addGap(0, 38, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(texto_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botao_ExcluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botao_Gravar)
                        .addGap(18, 18, 18)
                        .addComponent(botao_Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botao_Cancelar)
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botao_ExcluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(texto_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBox_Ativo)
                    .addComponent(texto_CodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botao_Gravar)
                    .addComponent(botao_Cancelar)
                    .addComponent(botao_Limpar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        limpar();
        pesquisar();
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       tabela_CodigoBarra.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    CodigoBarra codigoBarra = getCodigoBarraSelecionada();                    
                    editar(codigoBarra);
                }
            }
        });
    }//GEN-LAST:event_formInternalFrameOpened

    private void botao_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_CancelarActionPerformed
        hide();
    }//GEN-LAST:event_botao_CancelarActionPerformed

    private void botao_ExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_ExcluirItemActionPerformed
        if(getCodigoBarraSelecionada() != null) {
            int resp = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir?");
            if(resp == JOptionPane.YES_OPTION) {
                try {
                    codigoBarraDAO.excluir(getCodigoBarraSelecionada());
                    JOptionPane.showMessageDialog(this, "Registrado excluido com sucesso!");
                    pesquisar();
                } catch (ValidateException ex) {
                    Logger.getLogger(CodigoBarrasBrowser.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro ao cancelar!", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum código de barra selecionado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botao_ExcluirItemActionPerformed

    private void botao_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_LimparActionPerformed
        limpar();
    }//GEN-LAST:event_botao_LimparActionPerformed

    private void botao_GravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_GravarActionPerformed
        if(StringUtils.isNotEmpty(texto_CodigoBarra.getText())) {
            try {
                ProdutoHelper.getInstance().validaDuplicidadeCodigoBarras(texto_CodigoBarra.getText(), produto.getId(), codigoBarraSelecionado.getId());
                codigoBarraSelecionado.setProduto(produto);
                codigoBarraSelecionado.setCodigoBarras(texto_CodigoBarra.getText());
                codigoBarraSelecionado.setAtivo(checkBox_Ativo.isSelected());
                codigoBarraDAO.atualizar(codigoBarraSelecionado);
                JOptionPane.showMessageDialog(this, "Registrado gravado com sucesso!");
                limpar();
                pesquisar();
            } catch (ValidateException ex) {
                Logger.getLogger(CodigoBarrasBrowser.class.getName()).log(Level.SEVERE, null, ex);
                if(ex.getMensagemFixa() != null) {
                   JOptionPane.showMessageDialog(this, ex.getMensagemExcecao(), "Erro!", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                TrataExcecao.trataMensagemErro(e, CodigoBarrasBrowser.class);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Código de barra é obrigatório!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botao_GravarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_Cancelar;
    private javax.swing.JButton botao_ExcluirItem;
    private javax.swing.JButton botao_Gravar;
    private javax.swing.JButton botao_Limpar;
    private javax.swing.JCheckBox checkBox_Ativo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela_CodigoBarra;
    private javax.swing.JTextField texto_CodigoBarra;
    private javax.swing.JTextField texto_ID;
    // End of variables declaration//GEN-END:variables

    public Produto getProduto() {
        return produto;
    }

    public void setProduto(Produto produto) {
        this.produto = produto;
    }

    private void pesquisar() {
        CodigoBarraTableModel modelo = new CodigoBarraTableModel();
        List<CodigoBarra> listaCodigoBarras = codigoBarraDAO.recuperaCodigoBarraDoProduto(produto.getId());
        modelo.reload(listaCodigoBarras);
        tabela_CodigoBarra.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabela_CodigoBarra.setModel(modelo);
    }
    
    private CodigoBarra getCodigoBarraSelecionada() {
        if (tabela_CodigoBarra.getSelectedRow() == -1)
            return null;

        CodigoBarraTableModel modelo = (CodigoBarraTableModel) tabela_CodigoBarra.getModel();
        return modelo.getCodigoBarraAt(tabela_CodigoBarra.getSelectedRow());
    }

    private void editar(CodigoBarra codigoBarraSelecionado) {
        if(codigoBarraSelecionado != null && codigoBarraSelecionado.getId() != null) {
            texto_ID.setText(codigoBarraSelecionado.getId().toString());
            texto_CodigoBarra.setText(codigoBarraSelecionado.getCodigoBarras());
            checkBox_Ativo.setSelected(codigoBarraSelecionado.isAtivo());
            this.codigoBarraSelecionado = codigoBarraSelecionado;
        }
    }

    private void limpar() {
        codigoBarraSelecionado = new CodigoBarra();
        texto_CodigoBarra.setText(null);
        texto_ID.setText(null);
        checkBox_Ativo.setSelected(true);
    }
    
}
